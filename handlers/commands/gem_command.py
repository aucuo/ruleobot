import google.generativeai as genai
import os
from telebot.types import Message, logger
from bot import bot

genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

PROMPT_FILE_PATH = "gemini_prompt.txt"
try:
    with open(PROMPT_FILE_PATH, "r", encoding="utf-8") as file:
        base_system_prompt = file.read()
except FileNotFoundError:
    base_system_prompt = "–í—ã - Ruleobot, –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å."


def gem_command(message: Message):
    chat_id = str(message.chat.id)
    command_parts = message.text.split(maxsplit=1)

    if len(command_parts) < 2:
        bot.send_message(chat_id, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /gem <–≤–∞—à –≤–æ–ø—Ä–æ—Å>")
        return

    user_message = command_parts[1]

    user = message.from_user
    user_name = user.username or f"{user.first_name} {user.last_name or ''}"

    system_prompt = f"{base_system_prompt}\n\n–° —Ç–æ–±–æ–π –æ–±—â–∞–µ—Ç—Å—è —á–µ–ª–æ–≤–µ–∫ —Å –∏–º–µ–Ω–µ–º: {user_name}. –ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –≤ –Ω–∞—á–∞–ª–µ –µ–≥–æ –ø–æ –∏–º–µ–Ω–∏"

    try:
        model = genai.GenerativeModel(model_name="gemini-1.5-flash")

        response = model.generate_content(
            contents={"text": f"{system_prompt}\n\n–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message}"},
            generation_config={"max_output_tokens": 150}
        )

        logger.info(response.text)

        bot.send_message(chat_id, f"ü§ñ Ruleobot AI:\n{response.text}")
    except Exception as e:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
