from telebot.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from api.controllers.group_controller import GroupController
from bot import bot
import logging

logger = logging.getLogger(__name__)

def ask_command(message: Message):
    chat_id = str(message.chat.id)
    command_parts = message.text.split(maxsplit=1)

    if len(command_parts) < 2:
        bot.send_message(chat_id, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /ask <–≤–∞—à –≤–æ–ø—Ä–æ—Å>")
        return

    user_message = command_parts[1]
    group_controller = GroupController(chat_id)

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
    if not (group := group_controller.get()).get("success"):
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞: {group['error']}")
        return

    group_data = group["group"]
    owner_id = group_data.owner_id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã
    if owner_id == "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω":
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –°–æ–∑–¥–∞—Ç–µ–ª—å –≥—Ä—É–ø–ø—ã –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é
    user = message.from_user
    user_info = f"@{user.username}" if user.username else f"{user.first_name} {user.last_name or ''}"
    ask_message = (
        f"üì© –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_info}:\n\n"
        f"{user_message}\n\n"
        f"üì¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –≥—Ä—É–ø–ø—ã: {group_data.title}"
    )

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    reply_markup = InlineKeyboardMarkup()
    reply_markup.add(
        InlineKeyboardButton(
            text="–û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
            callback_data=f"reply_user:{chat_id}:{user.id}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback_data –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        )
    )

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –≥—Ä—É–ø–ø—ã —Å –∫–Ω–æ–ø–∫–æ–π
        bot.send_message(owner_id, ask_message, reply_markup=reply_markup)
        bot.send_message(chat_id, "‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–æ–∑–¥–∞—Ç–µ–ª—é –≥—Ä—É–ø–ø—ã.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–∑–¥–∞—Ç–µ–ª—é –≥—Ä—É–ø–ø—ã {owner_id}: {e}")
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—é –≥—Ä—É–ø–ø—ã.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
@bot.callback_query_handler(func=lambda call: call.data.startswith("reply_user:"))
def handle_reply_callback(call):
    try:
        _, chat_id, user_id = call.data.split(":")
        chat_id, user_id = int(chat_id), int(user_id)

        bot.send_message(
            call.message.chat.id,
            f"‚úèÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –≥—Ä—É–ø–ø—É.",
            reply_markup=None  # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        )

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –æ—Ç–≤–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        @bot.message_handler(func=lambda m: m.chat.id == call.message.chat.id)
        def collect_reply(reply_message):
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ö–æ–¥–Ω—É—é –≥—Ä—É–ø–ø—É
            bot.send_message(
                chat_id,
                f"–û—Ç–≤–µ—Ç –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã:\n\n{reply_message.text}"
            )
            # –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –æ –ø–µ—Ä–µ—Å—ã–ª–∫–µ
            bot.send_message(call.message.chat.id, "‚úÖ –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
            bot.remove_message_handler(collect_reply)  # –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
        bot.send_message(call.message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞.")
